[{"/Users/katezhang/Convergent/quora-clone/src/index.js":"1","/Users/katezhang/Convergent/quora-clone/src/serviceWorker.js":"2","/Users/katezhang/Convergent/quora-clone/src/App.js":"3","/Users/katezhang/Convergent/quora-clone/src/app/store.js":"4","/Users/katezhang/Convergent/quora-clone/src/firebase.js":"5","/Users/katezhang/Convergent/quora-clone/src/components/Quora.js":"6","/Users/katezhang/Convergent/quora-clone/src/features/userSlice.js":"7","/Users/katezhang/Convergent/quora-clone/src/components/auth/Login.js":"8","/Users/katezhang/Convergent/quora-clone/src/features/questionSlice.js":"9","/Users/katezhang/Convergent/quora-clone/src/components/filter.js":"10","/Users/katezhang/Convergent/quora-clone/src/components/Feed.js":"11","/Users/katezhang/Convergent/quora-clone/src/components/Widget.js":"12","/Users/katezhang/Convergent/quora-clone/src/components/Sidebar.js":"13","/Users/katezhang/Convergent/quora-clone/src/components/QHeader.js":"14","/Users/katezhang/Convergent/quora-clone/src/components/Post.js":"15","/Users/katezhang/Convergent/quora-clone/src/components/QuorBox.js":"16","/Users/katezhang/Convergent/quora-clone/src/components/WidgetContent.js":"17","/Users/katezhang/Convergent/quora-clone/src/components/SidebarOptions.js":"18","/Users/katezhang/Convergent/quora-clone/src/components/SidebarOption.js":"19"},{"size":623,"mtime":1648312573497,"results":"20","hashOfConfig":"21"},{"size":5004,"mtime":1648312573497,"results":"22","hashOfConfig":"21"},{"size":890,"mtime":1648312573494,"results":"23","hashOfConfig":"21"},{"size":266,"mtime":1648312573494,"results":"24","hashOfConfig":"21"},{"size":613,"mtime":1648312663370,"results":"25","hashOfConfig":"21"},{"size":618,"mtime":1649203437926,"results":"26","hashOfConfig":"21"},{"size":440,"mtime":1648312573496,"results":"27","hashOfConfig":"21"},{"size":4066,"mtime":1650428248621,"results":"28","hashOfConfig":"21"},{"size":604,"mtime":1648312573496,"results":"29","hashOfConfig":"21"},{"size":78,"mtime":1649203437929,"results":"30","hashOfConfig":"21"},{"size":1102,"mtime":1649983543862,"results":"31","hashOfConfig":"21"},{"size":362,"mtime":1649997733691,"results":"32","hashOfConfig":"21"},{"size":245,"mtime":1649203437926,"results":"33","hashOfConfig":"21"},{"size":5614,"mtime":1650425669107,"results":"34","hashOfConfig":"21"},{"size":5990,"mtime":1649982231280,"results":"35","hashOfConfig":"21"},{"size":877,"mtime":1649202804107,"results":"36","hashOfConfig":"21"},{"size":2490,"mtime":1649983649319,"results":"37","hashOfConfig":"21"},{"size":981,"mtime":1649805994992,"results":"38","hashOfConfig":"21"},{"size":500,"mtime":1649203437926,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1xlmbco",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"/Users/katezhang/Convergent/quora-clone/src/index.js",[],["83","84"],"/Users/katezhang/Convergent/quora-clone/src/serviceWorker.js",[],"/Users/katezhang/Convergent/quora-clone/src/App.js",[],"/Users/katezhang/Convergent/quora-clone/src/app/store.js",[],"/Users/katezhang/Convergent/quora-clone/src/firebase.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/Quora.js",[],"/Users/katezhang/Convergent/quora-clone/src/features/userSlice.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/auth/Login.js",[],"/Users/katezhang/Convergent/quora-clone/src/features/questionSlice.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/filter.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/Feed.js",["85","86","87"],"import React, { useEffect, useState, useContext } from \"react\";\nimport QuorBox from \"./QuorBox\";\nimport \"./Feed.css\";\nimport Post from \"./Post\";\nimport db from \"../firebase\";\nimport { FilterContext } from \"./filter.js\";\n\n\n\nfunction Feed() {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useContext(FilterContext);\n\n\n  useEffect(() => {\n    db.collection(\"content\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            questions: doc.data(),\n          }))\n        )\n    ); \n  }, []);\n\n  return (\n    <div className=\"feed\">\n      <QuorBox />\n      {posts.map(({ id, questions }) => (\n\n            filter == \"all\" || questions.tag == filter ? <Post\n              key={id}\n              Id={id}\n              tag={questions.tag}\n              question={questions.question}\n              imageUrl={questions.imageUrl}\n              timestamp={questions.timestamp}\n              users={questions.user} \n          /> : null\n      ))}\n    </div>\n  );\n}\n\nexport default Feed;\n","/Users/katezhang/Convergent/quora-clone/src/components/Widget.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/Sidebar.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/QHeader.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/Post.js",["88","89"],"import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport Modal from \"react-modal\";\nimport db from \"../firebase\";\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\n\nfunction Post({ Id, tag, question, imageUrl, timestamp, users }) {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const questionId = useSelector(selectQuestionId);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers, setGetAnswers] = useState([]);\n\n  useEffect(() => {\n    if (questionId) {\n      db.collection(\"content\")\n        .doc(questionId)\n        .collection(\"answer\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setGetAnswers(\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\n          )\n        );\n    }\n  }, [questionId]);\n\n  const handleAnswer = (e) => {\n    e.preventDefault();\n\n    if (questionId) {\n      db.collection(\"content\").doc(questionId).collection(\"answer\").add({\n        user: user,\n        answer: answer,\n        questionId: questionId,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n    console.log(questionId);\n    setAnswer(\"\");\n    setIsModalOpen(false);\n  };\n  return (\n    <div\n      className=\"post\"\n      onClick={() =>\n        dispatch(\n          setQuestionInfo({\n            questionId: Id,\n            questionName: question,\n          })\n        )\n      }\n    >\n      <div className=\"post__info\">\n        <Avatar\n          src={\n            users.photo\n              ? users.photo\n              : \"https://res.cloudinary.com/startup-grind/image/upload/c_fill,dpr_2.0,f_auto,g_center,h_250,q_auto:good,w_250/v1/gcs/platform-data-twilio/contentbuilder/Avatar.png\"\n          }\n        />\n        <h4>{users.displayName ? users.displayName : users.email}</h4>\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\n      </div>\n      <div className=\"post__body\">\n        <div className=\"post__question\">\n          <p>{question}</p>\n          <button\n            onClick={() => setIsModalOpen(true)}\n            className=\"post__btnAnswer\"\n          >\n            Answer\n          </button>\n          <Modal\n            isOpen={IsmodalOpen}\n            onRequestClose={() => setIsModalOpen(false)}\n            shouldCloseOnOverlayClick={false}\n            style={{\n              overlay: {\n                width: 680,\n                height: 550,\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                zIndex: \"1000\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: \"-250px\",\n                marginLeft: \"-350px\",\n              },\n            }}\n          >\n            <div className=\"modal__question\">\n              <h1>{question}</h1>\n              <p>\n                asked by{\" \"}\n                <span className=\"name\">\n                  {users.displayName ? users.displayName : users.email}\n                </span>{\" \"}\n                {\"\"}\n                on{\" \"}\n                <span className=\"name\">\n                  {new Date(timestamp?.toDate()).toLocaleString()}\n                </span>\n              </p>\n            </div>\n            <div className=\"modal__answer\">\n              <textarea\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                placeholder=\"Enter Your Answer\"\n                type=\"text\"\n              />\n            </div>\n            <div className=\"modal__button\">\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </button>\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\n                Add Answer\n              </button>\n            </div>\n          </Modal>\n        </div>\n        <div className=\"post__answer\">\n          {getAnswers.map(({ id, answers }) => (\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\n              {Id === answers.questionId ? (\n                <span>\n                  {answers.answer}\n                  <br />\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      color: \"gray\",\n                      fontSize: \"small\",\n                      display: \"flex\",\n                      right: \"0px\",\n                    }}\n                  >\n                    <span style={{ color: \"#b92b27\" }}>\n                      {answers.user.displayName\n                        ? answers.user.displayName\n                        : answers.user.email}{\" \"}\n                      on{\" \"}\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\n                    </span>\n                  </span>\n                </span>\n              ) : (\n                \"\"\n              )}\n            </p>\n          ))}\n        </div>\n        <img src={imageUrl} alt=\"\" />\n      </div>\n      <div className=\"post__footer\">\n        <div className=\"post__footerAction\">\n          <ArrowUpwardOutlinedIcon />\n          <ArrowDownwardOutlinedIcon />\n        </div>\n\n        <ChatBubbleOutlineOutlinedIcon />\n        <p className=\"tag\">{tag}</p>\n        <div className=\"post__footerLeft\">\n          <MoreHorizOutlined />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","/Users/katezhang/Convergent/quora-clone/src/components/QuorBox.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/WidgetContent.js",[],"/Users/katezhang/Convergent/quora-clone/src/components/SidebarOptions.js",["90","91","92","93"],"import { Add } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport \"./SidebarOption.css\";\nimport SidebarOption from \"./SidebarOption\";\n\n\nfunction SidebarOptions() {\n\n\n  const [input, setInput] = useState(\"all\");\n\n  const callback = (title) => {\n    console.log(title);\n    this.setInput(title);\n  }\n\n\n  return (\n    <div className=\"sidebarOptions\">\n      <SidebarOption src=\"https://cdn.shopify.com/s/files/1/2398/2457/t/19/assets/pf-9170c22c--DSC06111.jpg?v=1615866938\" title='Visual Arts' />\n      <SidebarOption src=\"https://marcolearning.com/wp-content/uploads/2022/02/different-kinds-of-writing-styles.jpg\" title='Writing' />\n      <SidebarOption src=\"http://www.inquiriesjournal.com/imgs/1200x1200/crop/article-images/uid-170-1059163527-2886/92192b.jpg\" title='Film' />\n      <SidebarOption src=\"https://qphs.fs.quoracdn.net/main-thumb-t-801-100-Sf8h894FXbQZQit0TeqDrrqS6xw6dwCQ.jpeg\" title=\"Music\" />\n    </div>\n  );\n}\n\nexport default SidebarOptions;\n","/Users/katezhang/Convergent/quora-clone/src/components/SidebarOption.js",["94","95","96"],"import { Add } from \"@material-ui/icons\";\nimport React, { useContext, useState } from \"react\";\nimport { FilterContext } from \"./filter.js\";\nimport \"./SidebarOption.css\";\n\n\n\n\nfunction SidebarOption({ src, title}) {\n  const [filter, setFilter] = useContext(FilterContext);\n  return (\n      <div className=\"sidebarOption\"\n            onClick={() => setFilter(title)}>\n        <img\n          src={src}\n          alt=\"\"\n        />\n        <p>{title}</p>\n      </div>\n  );\n}\n\nexport default SidebarOption;\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":12,"column":18,"nodeType":"103","messageId":"104","endLine":12,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":33,"column":20,"nodeType":"107","messageId":"108","endLine":33,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":33,"column":46,"nodeType":"107","messageId":"108","endLine":33,"endColumn":48},{"ruleId":"101","severity":1,"message":"109","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":26},{"ruleId":"101","severity":1,"message":"110","line":8,"column":29,"nodeType":"103","messageId":"104","endLine":8,"endColumn":42},{"ruleId":"101","severity":1,"message":"111","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"112","line":10,"column":10,"nodeType":"103","messageId":"104","endLine":10,"endColumn":15},{"ruleId":"101","severity":1,"message":"113","line":10,"column":17,"nodeType":"103","messageId":"104","endLine":10,"endColumn":25},{"ruleId":"101","severity":1,"message":"114","line":12,"column":9,"nodeType":"103","messageId":"104","endLine":12,"endColumn":17},{"ruleId":"101","severity":1,"message":"111","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"115","line":2,"column":29,"nodeType":"103","messageId":"104","endLine":2,"endColumn":37},{"ruleId":"101","severity":1,"message":"116","line":10,"column":10,"nodeType":"103","messageId":"104","endLine":10,"endColumn":16},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'setFilter' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RepeatOutlinedIcon' is defined but never used.","'ShareOutlined' is defined but never used.","'Add' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'callback' is assigned a value but never used.","'useState' is defined but never used.","'filter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]